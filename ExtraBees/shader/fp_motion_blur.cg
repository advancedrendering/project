struct vertexvIn {
  float4 wpos     : WPOS;
  half3  velocity : TEXCOORD0;
};

half4 main(vertexvIn vIn,
           uniform samplerRECT sceneTex,
           uniform half blurScale
           ) : COLOR
{
  const float samples = 32;

  half2 wpos = vIn.wpos.xy;
  half2 velocity = vIn.velocity.xy * blurScale;           // read velocity from texture coordvInate
//  half2 velocity = texRECT(velTex, wpos) * blurScale;  // read velocity from texture

  // sample vInto scene texture along motion vector
  const fixed w = 1.0 / samples;  // weight
  fixed4 a = 0;
  for(float i=0; i<samples; i+=1) {
    half t = i / (samples-1);
    a = a + texRECT(sceneTex, wpos + velocity*t) * w;
  }
  a.w = 1 - a.w;

  return a;
}
